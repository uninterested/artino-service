<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.artino.service.mapper.RoleMapper">
    <resultMap id="TRoleMap" type="com.artino.service.entity.TRole">
        <result property="id" column="id" />
        <result property="name" column="name" />
        <result property="description" column="description" />
        <result property="sort" column="sort" />
        <result property="createdAt" column="created_at" />
        <result property="deleted" column="deleted" />
    </resultMap>
    <resultMap id="DTORoleMap" type="com.artino.service.dto.role.UserRoleDTO" extends="TRoleMap">
        <result property="system_role" column="systemRole" />
    </resultMap>
    <sql id="queryAll">
        select * from t_role
    </sql>
    <sql id="whereWithCondition">
        <where>
            1=1
            <if test="id != null">and `id` = #{id}</if>
            <if test="name != null">and `name` = #{name}</if>
            <if test="description != null">and `description` = #{description}</if>
            <if test="sort != null">and `sort` = #{sort}</if>
            <if test="createdAt != null">and `created_at` = #{createdAt}</if>
            and `deleted` = 0
        </where>
    </sql>
    <insert id="insert" parameterType="com.artino.service.entity.TRole">
        insert into t_role (
        <trim suffix="" suffixOverrides=",">
            <if test="id != null">`id`,</if>
            <if test="name != null">`name`,</if>
            <if test="description != null">`description`,</if>
            <if test="sort != null">`sort`,</if>
            <if test="createdAt != null">`created_at`,</if>
            <if test="deleted != null">`deleted`,</if>
        </trim>
        ) values (
        <trim suffix="" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null">#{name},</if>
            <if test="description != null">#{description},</if>
            <if test="sort != null">#{sort},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="deleted != null">#{deleted},</if>
        </trim>
        )
    </insert>
    <update id="update" parameterType="com.artino.service.entity.TRole">
        update t_role
        <set>
            <trim suffix="" suffixOverrides=",">
                id = #{id},
                <if test="name != null">`name` = #{name},</if>
                <if test="description != null">`description` = #{description},</if>
                <if test="sort != null">`sort` = #{sort},</if>
                <if test="createdAt != null">`created_at` = #{createdAt},</if>
                <if test="deleted != null">`deleted` = #{deleted},</if>
            </trim>
        </set>
        where id = #{id}
    </update>
    <select id="findList" parameterType="com.artino.service.entity.TRole" resultMap="TRoleMap">
        <include refid="queryAll" />
        <include refid="whereWithCondition" />
    </select>
    <select id="findOne" parameterType="com.artino.service.entity.TRole" resultMap="TRoleMap">
        <include refid="queryAll" />
        <include refid="whereWithCondition" />
        limit 0,1
    </select>
    <select id="findListWith" parameterType="List" resultMap="TRoleMap">
        <include refid="queryAll" />
        <where>
            and `deleted` = 0
            <if test="list != null and list.size() > 0">
                and `id` in
                <foreach collection="list" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
    <select id="findMaxSort" resultType="Long">
        select IFNULL(max(sort), 0) as sort from t_role
    </select>
    <select id="findUserRoles" parameterType="Long" resultMap="DTORoleMap">
        select t2.*, IFNULL(t3.id, 0) as system_role from t_admin_role t1 inner join t_role t2 on t1.role_id = t2.id
        left join t_config t3 on t2.id = t3.`value`
        <where>
            t2.deleted = 0 and t3.type = 0 and t1.admin_id = ${id}
        </where>
    </select>
    <select id="findWithPage" parameterType="com.artino.service.common.PageReq" resultMap="TRoleMap">
        <include refid="queryAll" />
        <where>
            and `deleted` = 0
            <if test="keyword != null and keyword != ''">
                and ((`name` like concat('%',#{keyword, jdbcType=VARCHAR},'%')) or (`description` like concat('%',#{keyword, jdbcType=VARCHAR},'%')))
            </if>
            <if test="createdAt != null and createdAt.size() >= 1">
                and `created_at` &gt;= #{createdAt[0]}
            </if>
            <if test="createdAt != null and createdAt.size() >= 2">
                and `created_at` &lt;= #{createdAt[1]}
            </if>
        </where>
        order by `sort` asc, `id` asc
        <if test="current >= 0 and pageSize > 0">
            limit #{skip}, #{pageSize}
        </if>
    </select>
    <select id="findTotal" parameterType="com.artino.service.common.PageReq" resultType="Long">
        select count(id) from t_role
        <where>
            and `deleted` = 0
            <if test="keyword != null and keyword != ''">
                and ((`name` like concat('%',#{keyword, jdbcType=VARCHAR},'%')) or (`description` like concat('%',#{keyword, jdbcType=VARCHAR},'%')))
            </if>
            <if test="createdAt != null and createdAt.size() >= 1">
                and `created_at` &gt;= #{createdAt[0]}
            </if>
            <if test="createdAt != null and createdAt.size() >= 2">
                and `created_at` &lt;= #{createdAt[1]}
            </if>
        </where>
    </select>
    <delete id="deleteListByRoleId" parameterType="Long">
        delete from `t_role_menu`
        <where>
            1 = 1
            <if test="roleId != null">
                and `role_id` = #{roleId}
            </if>
        </where>
    </delete>
    <insert id="batchInsertRoleMenu" parameterType="com.artino.service.entity.TRoleMenu">
        insert into `t_role_menu` (`role_id`,`menu_id`) values
        <foreach collection="list" separator="," item="item">
            (#{item.roleId}, #{item.menuId})
        </foreach>
    </insert>

</mapper>